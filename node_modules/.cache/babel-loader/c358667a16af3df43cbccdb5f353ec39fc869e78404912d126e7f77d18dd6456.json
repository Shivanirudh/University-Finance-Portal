{"ast":null,"code":"var _jsxFileName = \"/home/shivanirudh/Documents/iiitb/ESD/frontend/src/Components/EmpSalaries.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmpSalaries = () => {\n  _s();\n  const [employeeSal, setEmployeeSal] = useState([]);\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\n  const handleEmployeeSelect = employeeId => {\n    // Toggle employee selection\n    setSelectedEmployees(prevSelected => prevSelected.includes(employeeId) ? prevSelected.filter(id => id !== employeeId) : [...prevSelected, employeeId]);\n  };\n  const handleDisburseSalary = () => {\n    // Placeholder for disburse salary logic\n    console.log('Disbursing salary to selected employees:', selectedEmployees);\n    selectedEmployees.fo;\n\n    // You can add your disburse salary logic here\n  };\n  useEffect(() => {\n    fetch('http://localhost:9191/employeesalaries/all').then(response => response.json()).then(data => setEmployeeSal(data));\n  }, []);\n  const isDisburseButtonActive = selectedEmployees.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Amount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: employeeSal.map(employee => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: selectedEmployees.includes(employee.id),\n                onChange: () => handleEmployeeSelect(employee.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this), \"let status = null; if (\", employee.status, \" == 0) status = False; else status = true;\", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.employee.employee_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [employee.employee.first_name, \" \", employee.employee.last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.employee.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", employee.amount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: employee.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, employee.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDisburseSalary,\n      disabled: !isDisburseButtonActive,\n      children: \"Disburse Salary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(EmpSalaries, \"RRakr4IvKYqQdK83S+bWeCSqXTo=\");\n_c = EmpSalaries;\nexport default EmpSalaries;\nvar _c;\n$RefreshReg$(_c, \"EmpSalaries\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EmpSalaries","_s","employeeSal","setEmployeeSal","selectedEmployees","setSelectedEmployees","handleEmployeeSelect","employeeId","prevSelected","includes","filter","id","handleDisburseSalary","console","log","fo","fetch","then","response","json","data","isDisburseButtonActive","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","employee","type","checked","onChange","status","employee_id","first_name","last_name","title","amount","description","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/shivanirudh/Documents/iiitb/ESD/frontend/src/Components/EmpSalaries.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\nconst EmpSalaries = () => {\n    const [employeeSal, setEmployeeSal] = useState([]);\n    const [selectedEmployees, setSelectedEmployees] = useState([]);\n\n    const handleEmployeeSelect = (employeeId) => {\n        // Toggle employee selection\n        setSelectedEmployees((prevSelected) =>\n        prevSelected.includes(employeeId)\n            ? prevSelected.filter((id) => id !== employeeId)\n            : [...prevSelected, employeeId]\n        );\n    };\n    const handleDisburseSalary = () => {\n        // Placeholder for disburse salary logic\n        console.log('Disbursing salary to selected employees:', selectedEmployees);\n        selectedEmployees.fo\n\n        // You can add your disburse salary logic here\n    };\n\n    useEffect(() => {\n        fetch('http://localhost:9191/employeesalaries/all')\n          .then(response => response.json())\n          .then(data => setEmployeeSal(data));\n      }, []);\n\n      const isDisburseButtonActive = selectedEmployees.length > 0;  \n    return (\n        <div>\n            <table>\n                <thead>\n                <tr>\n                    <th>Select</th>\n                    <th>ID</th>\n                    <th>Name</th>\n                    <th>Title</th>\n                    <th>Amount</th>\n                    <th>Description</th>\n                    <th>Status</th>\n                </tr>\n                </thead>\n                <tbody>\n                {employeeSal.map((employee) => (\n                    <tr key={employee.id}>\n                    <td>\n                        <label>\n                        <input\n                            type=\"checkbox\"\n                            checked={selectedEmployees.includes(employee.id)}\n                            onChange={() => handleEmployeeSelect(employee.id)}\n                        />\n                        </label>\n                    </td>\n                    let status = null;\n                    if ({employee.status} == 0) status = False;\n                    else status = true;\n                    <td>{employee.employee.employee_id}</td>\n                    <td>{employee.employee.first_name} {employee.employee.last_name}</td>\n                    <td>{employee.employee.title}</td>\n                    <td>${employee.amount}</td>\n                    <td>{employee.description}</td>\n                    <td>{status}</td>\n                    </tr>\n                ))}\n                </tbody>\n            </table>\n            <button onClick={handleDisburseSalary} disabled={!isDisburseButtonActive}>\n                Disburse Salary\n            </button>\n        </div>\n    );\n};\n\nexport default EmpSalaries;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}