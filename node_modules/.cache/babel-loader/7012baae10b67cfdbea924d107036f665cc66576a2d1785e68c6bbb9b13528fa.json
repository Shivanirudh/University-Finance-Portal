{"ast":null,"code":"var _jsxFileName = \"/home/shivanirudh/Documents/iiitb/ESD/frontend/src/Components/EmpSalaries.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmpSalaries = () => {\n  _s();\n  const [employeeSal, setEmployeeSal] = useState([]);\n  const [selectedEmployees, setSelectedEmployees] = useState([]);\n  const handleEmployeeSelect = employeeId => {\n    // Toggle employee selection\n    setSelectedEmployees(prevSelected => prevSelected.includes(employeeId) ? prevSelected.filter(id => id !== employeeId) : [...prevSelected, employeeId]);\n  };\n  const handleDisburseSalary = () => {\n    // Placeholder for disburse salary logic\n    console.log('Disbursing salary to selected employees:', selectedEmployees);\n    // You can add your disburse salary logic here\n  };\n  useEffect(() => {\n    fetch('http://localhost:9191/employeesalaries/all').then(response => response.json()).then(data => setEmployeeSal(data));\n  }, []);\n  const isDisburseButtonActive = selectedEmployees.length > 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: employeeSal.map(employee => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: selectedEmployees.includes(employee.id),\n            onChange: () => handleEmployeeSelect(employee.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 21\n          }, this), employee.name, \" - \", employee.position, \" - $\", employee.salary]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, employee.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleDisburseSalary,\n      disabled: !isDisburseButtonActive,\n      children: \"Disburse Salary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(EmpSalaries, \"RRakr4IvKYqQdK83S+bWeCSqXTo=\");\n_c = EmpSalaries;\nexport default EmpSalaries;\nvar _c;\n$RefreshReg$(_c, \"EmpSalaries\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","EmpSalaries","_s","employeeSal","setEmployeeSal","selectedEmployees","setSelectedEmployees","handleEmployeeSelect","employeeId","prevSelected","includes","filter","id","handleDisburseSalary","console","log","fetch","then","response","json","data","isDisburseButtonActive","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","employee","type","checked","onChange","name","position","salary","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/shivanirudh/Documents/iiitb/ESD/frontend/src/Components/EmpSalaries.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n\nconst EmpSalaries = () => {\n    const [employeeSal, setEmployeeSal] = useState([]);\n    const [selectedEmployees, setSelectedEmployees] = useState([]);\n\n    const handleEmployeeSelect = (employeeId) => {\n        // Toggle employee selection\n        setSelectedEmployees((prevSelected) =>\n        prevSelected.includes(employeeId)\n            ? prevSelected.filter((id) => id !== employeeId)\n            : [...prevSelected, employeeId]\n        );\n    };\n    const handleDisburseSalary = () => {\n        // Placeholder for disburse salary logic\n        console.log('Disbursing salary to selected employees:', selectedEmployees);\n        // You can add your disburse salary logic here\n    };\n\n    useEffect(() => {\n        fetch('http://localhost:9191/employeesalaries/all')\n          .then(response => response.json())\n          .then(data => setEmployeeSal(data));\n      }, []);\n\n      const isDisburseButtonActive = selectedEmployees.length > 0;  \n    return (\n        <div>\n            <h2>Employee List</h2>\n            <ul>\n                {employeeSal.map((employee) => (\n                <li key={employee.id}>\n                    <label>\n                    <input\n                        type=\"checkbox\"\n                        checked={selectedEmployees.includes(employee.id)}\n                        onChange={() => handleEmployeeSelect(employee.id)}\n                    />\n                    {employee.name} - {employee.position} - ${employee.salary}\n                    </label>\n                </li>\n                ))}\n            </ul>\n            <button onClick={handleDisburseSalary} disabled={!isDisburseButtonActive}>\n                Disburse Salary\n            </button>\n        </div>\n    );\n};\n\nexport default EmpSalaries;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACO,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMS,oBAAoB,GAAIC,UAAU,IAAK;IACzC;IACAF,oBAAoB,CAAEG,YAAY,IAClCA,YAAY,CAACC,QAAQ,CAACF,UAAU,CAAC,GAC3BC,YAAY,CAACE,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKJ,UAAU,CAAC,GAC9C,CAAC,GAAGC,YAAY,EAAED,UAAU,CAClC,CAAC;EACL,CAAC;EACD,MAAMK,oBAAoB,GAAGA,CAAA,KAAM;IAC/B;IACAC,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEV,iBAAiB,CAAC;IAC1E;EACJ,CAAC;EAEDR,SAAS,CAAC,MAAM;IACZmB,KAAK,CAAC,4CAA4C,CAAC,CAChDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIhB,cAAc,CAACgB,IAAI,CAAC,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,sBAAsB,GAAGhB,iBAAiB,CAACiB,MAAM,GAAG,CAAC;EAC7D,oBACItB,OAAA;IAAAuB,QAAA,gBACIvB,OAAA;MAAAuB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB3B,OAAA;MAAAuB,QAAA,EACKpB,WAAW,CAACyB,GAAG,CAAEC,QAAQ,iBAC1B7B,OAAA;QAAAuB,QAAA,eACIvB,OAAA;UAAAuB,QAAA,gBACAvB,OAAA;YACI8B,IAAI,EAAC,UAAU;YACfC,OAAO,EAAE1B,iBAAiB,CAACK,QAAQ,CAACmB,QAAQ,CAACjB,EAAE,CAAE;YACjDoB,QAAQ,EAAEA,CAAA,KAAMzB,oBAAoB,CAACsB,QAAQ,CAACjB,EAAE;UAAE;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrD,CAAC,EACDE,QAAQ,CAACI,IAAI,EAAC,KAAG,EAACJ,QAAQ,CAACK,QAAQ,EAAC,MAAI,EAACL,QAAQ,CAACM,MAAM;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD;MAAC,GARHE,QAAQ,CAACjB,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAShB,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACL3B,OAAA;MAAQoC,OAAO,EAAEvB,oBAAqB;MAACwB,QAAQ,EAAE,CAAChB,sBAAuB;MAAAE,QAAA,EAAC;IAE1E;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEd,CAAC;AAACzB,EAAA,CA/CID,WAAW;AAAAqC,EAAA,GAAXrC,WAAW;AAiDjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}